#[1] "No Pause" "Pause"
levels(lyComplex2$PostPause)<-c("no pause","pause")
levels(lyComplex2$Environment2)
#[1]"#l"        "l#l-lely"  "l#l-ll"    "syll. l#l"
levels(lyComplex2$Environment2)<-c("#l-<l>",  "l#l-<lel>" , "l#l-<ll>" ,   "syll.l#l-<ll>")
levels(lyComplex2$Environment2)
#[1] "#l"        "l#l-lely"  "l#l-ll"    "syll. l#l"
final_ly_complex_model.lmer<-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
summary(final_ly_complex_model.lmer)
# Fixed effects:
#   Estimate Std. Error         df t value Pr(>|t|)
# (Intercept)                                       5.584e-01  9.934e-03  3.637e+02  56.204  < 2e-16 ***
#   Environment2l#l-<lel>                             1.261e-02  1.205e-02  5.930e+01   1.047 0.299502
# Environment2l#l-<ll>                             -1.996e-02  6.813e-03  7.140e+01  -2.929 0.004564 **
# Environment2syll.l#l-<ll>                        -6.304e-03  7.317e-03  1.009e+02  -0.861 0.391017
# logRelFreq                                       -4.665e-04  1.462e-03  5.090e+01  -0.319 0.750937
# Rating                                           -2.479e-03  1.176e-03  1.078e+03  -2.109 0.035211 *
#   LocSpeech                                        -7.494e-03  5.323e-04  1.127e+03 -14.078  < 2e-16 ***
#   TypeOfLtap                                       -1.466e-02  3.697e-03  1.128e+03  -3.965 7.81e-05 ***
#   PostPausepause                                    7.718e-03  2.918e-03  1.131e+03   2.645 0.008290 **
#   Accentuationunaccented                            2.776e-03  2.448e-03  1.106e+03   1.134 0.257069
# PrecedingSegmentDuration                         -1.458e-01  2.309e-02  8.668e+02  -6.315 4.31e-10 ***
#   Environment2l#l-<lel>:logRelFreq                 -2.253e-03  2.391e-03  5.120e+01  -0.942 0.350465
# Environment2l#l-<ll>:logRelFreq                  -4.045e-03  2.152e-03  6.530e+01  -1.879 0.064668 .
# Environment2syll.l#l-<ll>:logRelFreq             -5.820e-03  2.256e-03  8.080e+01  -2.579 0.011706 *
# Environment2l#l-<lel>:Accentuationunaccented     -1.787e-02  5.279e-03  1.093e+03  -3.386 0.000734 ***
# Environment2l#l-<ll>:Accentuationunaccented      -3.901e-04  4.001e-03  1.096e+03  -0.097 0.922349
# Environment2syll.l#l-<ll>:Accentuationunaccented  2.580e-03  5.723e-03  1.103e+03   0.451 0.652245
#############
# Let's get the  model for the dissertation
table_final_models<-as.data.frame(coef(summary(final_ly_complex_model.lmer)))
xtable(table_final_models,digits = 3)
#############################################################
# Let's now look at each factors contribution to the model
###############################################################
############################################################
# Do we need random effects?
#############################################
# Speaker
lyComplex.finalWithoutSpeaker <-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) , data = lyComplex2)
summary(lyComplex.finalWithoutSpeaker)
# Fixed effects:
#   Estimate Std. Error         df t value Pr(>|t|)
# (Intercept)                                   5.592e-01  9.432e-03  3.508e+02  59.295  < 2e-16 ***
#   Environment2l#l-lely                          8.094e-03  1.208e-02  6.080e+01   0.670  0.50551
# Environment2l#l-ll                           -1.903e-02  6.866e-03  7.330e+01  -2.772  0.00706 **
# Environment2syll. l#l                        -8.456e-03  7.432e-03  1.079e+02  -1.138  0.25778
# logRelFreq                                   -4.691e-04  1.459e-03  5.120e+01  -0.322  0.74913
# Rating                                       -3.167e-03  1.041e-03  1.161e+03  -3.041  0.00241 **
#   LocSpeech                                    -7.761e-03  5.189e-04  1.138e+03 -14.956  < 2e-16 ***
#   TypeOfLtap                                   -1.486e-02  3.753e-03  1.130e+03  -3.960 7.97e-05 ***
#   PostPausepause                                8.375e-03  2.834e-03  1.132e+03   2.955  0.00319 **
#   Accentuationunaccented                        3.525e-03  2.603e-03  1.117e+03   1.354  0.17591
# PrecedingSegmentDuration                     -1.116e-01  2.385e-02  8.245e+02  -4.682 3.32e-06 ***
#   Environment2l#l-lely:logRelFreq              -2.154e-03  2.388e-03  5.160e+01  -0.902  0.37132
# Environment2l#l-ll:logRelFreq                -3.901e-03  2.166e-03  6.580e+01  -1.801  0.07630 .
# Environment2syll. l#l:logRelFreq             -5.533e-03  2.283e-03  8.350e+01  -2.423  0.01754 *
# Environment2l#l-lely:Accentuationunaccented  -1.766e-02  5.679e-03  1.115e+03  -3.110  0.00192 **
# Environment2l#l-ll:Accentuationunaccented     6.006e-04  4.295e-03  1.116e+03   0.140  0.88881
# Environment2syll. l#l:Accentuationunaccented  2.805e-03  6.121e-03  1.123e+03   0.458  0.64679
cor(lyComplex2$bc, fitted(lyComplex.finalWithoutSpeaker))^2
#[1] 0.3797677
lyComplex.finalWithoutItem <-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Participant), data = lyComplex2)
summary(lyComplex.finalWithoutItem)
# Fixed effects:
#   Estimate Std. Error         df t value Pr(>|t|)
# (Intercept)                                   5.363e-01  8.514e-03  7.733e+02  62.986  < 2e-16 ***
#   Environment2l#l-lely                          9.715e-03  6.898e-03  1.142e+03   1.408 0.159269
# Environment2l#l-ll                           -1.734e-02  4.134e-03  1.143e+03  -4.194 2.95e-05 ***
# Environment2syll. l#l                        -8.641e-03  5.183e-03  1.146e+03  -1.667 0.095796 .
# logRelFreq                                   -8.747e-04  7.612e-04  1.141e+03  -1.149 0.250754
# Rating                                       -2.004e-03  1.157e-03  1.088e+03  -1.732 0.083574 .
# LocSpeech                                    -6.203e-03  5.079e-04  1.160e+03 -12.212  < 2e-16 ***
#   TypeOfLtap                                   -1.646e-02  3.864e-03  1.161e+03  -4.260 2.21e-05 ***
#   PostPausepause                                9.709e-03  3.038e-03  1.155e+03   3.196 0.001433 **
#   Accentuationunaccented                        1.498e-03  2.585e-03  1.147e+03   0.579 0.562500
# PrecedingSegmentDuration                     -9.106e-02  2.006e-02  1.152e+03  -4.538 6.26e-06 ***
#   Environment2l#l-lely:logRelFreq              -2.246e-03  1.254e-03  1.141e+03  -1.791 0.073542 .
# Environment2l#l-ll:logRelFreq                -3.445e-03  1.210e-03  1.141e+03  -2.847 0.004489 **
# Environment2syll. l#l:logRelFreq             -5.246e-03  1.429e-03  1.144e+03  -3.670 0.000253 ***
# Environment2l#l-lely:Accentuationunaccented  -1.762e-02  5.594e-03  1.141e+03  -3.150 0.001673 **
# Environment2l#l-ll:Accentuationunaccented     2.204e-04  4.236e-03  1.142e+03   0.052 0.958526
# Environment2syll. l#l:Accentuationunaccented  3.720e-03  6.032e-03  1.144e+03   0.617 0.537527
cor(lyComplex2$bc, fitted(lyComplex.finalWithoutItem))^2
#[1]  0.3806
# note that the models are very bad...
anova(lyComplex.finalWithoutItem,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 19 -4853.4 -4757.1 2445.7  -4891.4
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 63.519      1  1.588e-15 ***
anova(lyComplex.finalWithoutSpeaker,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance Chisq Chi Df Pr(>Chisq)
# object 19 -4798.9 -4702.6 2418.5  -4836.9
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9   118      1  < 2.2e-16 ***
#   ---
# Now, let's see how much each factor explains - we will take a look at the ACI for that
# Let's create models in which one of the preditor variables is missing
lyComplex.finalWithoutInteraction1 <-lmer(bc ~ logRelFreq+Rating+
LocSpeech + TypeOfL+
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutEnvironment <-lmer(bc ~ logRelFreq+Rating+
LocSpeech + TypeOfL+
PostPause+Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutAccentuation<-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
PostPause+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutInteraction2<- lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
PostPause+Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutLocSpeech <-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
TypeOfL+
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutPostPause <- lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutRelFreq <-lmer(bc ~ Rating+
LocSpeech + TypeOfL+
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutTypeOfL <-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech +
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutPrecedingSeg <-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
PostPause+Environment2*Accentuation+
(1|Item) + (1|Participant), data = lyComplex2)
lyComplex.finalWithoutRating <-lmer(bc ~ Environment2*logRelFreq+
LocSpeech +
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
###########################################################################
# Now, let's have a look at the contribution of each factor
###################################################################
anova(lyComplex.finalWithoutSpeaker,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance Chisq Chi Df Pr(>Chisq)
# object 19 -4798.9 -4702.6 2418.5  -4836.9
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9   118      1  < 2.2e-16 ***
4914.9-4798.9
#[1] 116
anova(lyComplex.finalWithoutItem,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 19 -4853.4 -4757.1 2445.7  -4891.4
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 63.519      1  1.588e-15 ***
4914.9-4853.4
#61.5
anova(lyComplex.finalWithoutInteraction1,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 17 -4913.7 -4827.5 2473.8  -4947.7
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 7.2282      3    0.06497 .
4914.9-4913.7
#1,2
anova(lyComplex.finalWithoutInteraction2,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 17 -4907.9 -4821.7 2471.0  -4941.9
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 13.003      3   0.004629 **
4914.9-4907.9
#7
anova(lyComplex.finalWithoutEnvironment,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 11 -4890.2 -4834.4 2456.1  -4912.2
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 42.721      9  2.425e-06 ***
4914.9-4890.2
#24.7
anova(lyComplex.finalWithoutAccentuation,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 16 -4909.8 -4828.6 2470.9  -4941.8
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 13.147      4    0.01058 *
4914.9-4909.8
#5,1
anova(lyComplex.finalWithoutRelFreq,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 16 -4904.5 -4823.3 2468.2  -4936.5
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 18.446      4   0.001009 **
4914.9-4904.5
#[1] 10.4
anova(lyComplex.finalWithoutLocSpeech,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance Chisq Chi Df Pr(>Chisq)
# object 19 -4737.9 -4641.6 2388.0  -4775.9
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9   179      1  < 2.2e-16 ***
4914.9-4737.9
#177
anova(lyComplex.finalWithoutPrecedingSeg,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 19 -4879.2 -4782.8 2458.6  -4917.2
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 37.754      1  8.026e-10 ***
# #   ---
4914.9-4879.2
#35.7
anova(final_ly_complex_model.lmer,lyComplex.finalWithoutPostPause)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# ..1    19 -4909.7 -4813.4 2473.9  -4947.7
# object 20 -4914.9 -4813.5 2477.5  -4954.9 7.2039      1   0.007275 **
4914.9-4909.7
# 5.2
anova(lyComplex.finalWithoutRating,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 18 -4898.2 -4806.9 2467.1  -4934.2
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 20.699      2  3.201e-05 ***
-4914.9-4898.2
#[1] 16.7
anova(lyComplex.finalWithoutTypeOfL,final_ly_complex_model.lmer)
# Df     AIC     BIC logLik deviance  Chisq Chi Df Pr(>Chisq)
# object 19 -4901.0 -4804.7 2469.5  -4939.0
# ..1    20 -4914.9 -4813.5 2477.5  -4954.9 15.918      1  6.614e-05 ***
4914.9-4901.0
#[1] 13.9
########################################################
# When we look at the contribution of each factor in the model without
# the interaction, we see the following picture
#######################################################################
# Let's put these numbers in a table
AIC_decrease_lyComplex<-matrix(c(177,116,63,62,25,17,14,10,7,5,5,1),ncol=12,byrow=TRUE)
colnames(AIC_decrease_lyComplex)<-c("Local-\nSpeechRate", "Speaker","Preceding-\nSegmentDuration","Item", "Environment","SemanticTrans-\nparencyRating",
"TypeOfL","logRelative-\nFrequency", "Env. * Acc.", "Accentuation",
"PostPause",  "Env. * logRelFr.")
rownames(AIC_decrease_lyComplex)<-c("Decrease in AIC")
AIC_decrease_lyComplex <- as.table(AIC_decrease_lyComplex)
AIC_decrease_lyComplex
#change directory for plots
setwd("C:/Users/sbenhedia/Dropbox/Geminates/Schriften/Diss/images/Experiment")
# plot effect sizes
png("AICdecreaseLYComplex.png", units="cm", height=11, width=18, res=300, pointsize=09)
par(mar=c(2.6,8.1, 1.1, 2), xpd=TRUE, cex=0.9)
barplot((AIC_decrease_lyComplex),horiz=T, col="lightgrey",  names.arg =colnames(AIC_decrease_lyComplex), las=2, xaxt="n",border="lightgrey")
xx<-barplot(AIC_decrease_lyComplex, horiz=T, col="lightgrey",names.arg =colnames(AIC_decrease_lyComplex), las=2, xaxt="n",border="lightgrey")
text(y = xx, x = AIC_decrease_lyComplex ,label = AIC_decrease_lyComplex, pos = 4, cex = 0.8, col = "black")
title(xlab="AIC increase", line=0, cex.lab=1.1)
dev.off()
##############################
# We should also plot all the main effects
#################################
ylim=c(30,100)
###############################
# Plot main
library(languageR)
visreg(final_ly_complex_model.lmer, "Environment2",by="Accentuation",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=F, xlab="environment",ylim=ylim,band=F,
overlay=TRUE ,line.par = list(col = c('cornflowerblue','darkblue')),cex=0.8)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(Hmisc)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(lattice)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(dplyr)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(multcomp)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(nortest)
install.packages("nortest")
library(nortest)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(pgirmess)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(dplyr)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library(party)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library("bootpredictlme4", lib.loc="~/R/win-library/3.2")
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library("MuMIn", lib.loc="~/R/win-library/3.2")
library("multilevel", lib.loc="~/R/win-library/3.2")
library("multcomp", lib.loc="~/R/win-library/3.2")
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library("lmerTest", lib.loc="~/R/win-library/3.2")
detach("package:lmerTest", unload=TRUE)
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
detach("package:bootpredictlme4", unload=TRUE)
library("bootpredictlme4", lib.loc="~/R/win-library/3.2")
par <- trellis.par.get()
#
#par <- lapply(par, function(x) replace(x, names(x) == "lwd", 4)) # das ist Liniendicke #
par$plot.line$col <- "cornflowerblue" # das ist die Farbe der Estimate-Linie
# #par$strip.border<-1
par$fontsize <- list(text=15) # das ist glaub ich logisch :)
par$strip.background$col <- "lightgrey" # das macht das pinke/orangefarbene weg
par$panel.background$col <- "white" # das macht das weiß im plot weg
#
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
visreg(final_ly_complex_model.lmer, "Rating",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
xlab="SemanticTransparency\nRating",line.par = list(col ='cornflowerblue'),
ylim=ylim,band=F,cex=0.8)
final_ly_complex_model.lmer<-lmer(bc ~ Environment2*logRelFreq+Rating+logRelFreq+
LocSpeech + TypeOfL+
PostPause+Environment2*Accentuation+ PrecedingSegmentDuration+
(1|Item) + (1|Participant), data = lyComplex2)
summary(final_ly_complex_model.lmer)
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library("acepack", lib.loc="~/R/win-library/3.2")
library("assertthat", lib.loc="~/R/win-library/3.2")
library("base64enc", lib.loc="~/R/win-library/3.2")
library("BH", lib.loc="~/R/win-library/3.2")
library("bitops", lib.loc="~/R/win-library/3.2")
library("calibrate", lib.loc="~/R/win-library/3.2")
library("car", lib.loc="~/R/win-library/3.2")
library("caTools", lib.loc="~/R/win-library/3.2")
library("chron", lib.loc="~/R/win-library/3.2")
library("coda", lib.loc="~/R/win-library/3.2")
library("coin", lib.loc="~/R/win-library/3.2")
library("colorspace", lib.loc="~/R/win-library/3.2")
library("curl", lib.loc="~/R/win-library/3.2")
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
library("psych", lib.loc="~/R/win-library/3.2")
visreg(final_ly_complex_model.lmer, "logRelFreq",by="Environment2",
ylab="duration in milliseconds", trans= function(x) (x^(1/lambda))*1000,
rug=T, xlab="logRelativeFrequency",ylim=ylim,band=F,
#line.par = list(col = 'cornflowerblue')
par.settings=par,cex=0.8)
